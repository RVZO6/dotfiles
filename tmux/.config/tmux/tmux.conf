# -----------------------------------------------------------------------------
# Core Configuration
# -----------------------------------------------------------------------------
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g history-limit 10000
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set-window-option -g mode-keys vi
set-option -g mouse on
set-option -g detach-on-destroy off

# -----------------------------------------------------------------------------
# Conditional Settings (SSH vs Local)
# -----------------------------------------------------------------------------

# We check if the SSH_CLIENT environment variable is set.
# If it is, we are in an SSH session. Otherwise, we are in a local session.

# --- Conditional Prefix Key ---
if-shell '[ -n "$SSH_CLIENT" ]' {
    # SSH: Set prefix to C-b
    set-option -g prefix C-b
    bind-key C-b send-prefix
} {
    # LOCAL: Set prefix to C-Space
    set-option -g prefix C-Space
    unbind-key C-b
    bind-key C-Space send-prefix
}

# -----------------------------------------------------------------------------
# Keybindings
# -----------------------------------------------------------------------------
bind-key -r f run-shell "tmux neww ~/.config/scripts/tmux-sessionizer"
bind-key -r k run-shell "~/.config/scripts/tmux-sessionizer ~/projects/"
bind-key S command-prompt -p "Session name:" "new-session -s '%%'"
bind-key Q confirm-before -p "Kill the entire tmux server? (y/n)" "kill-server"
bind-key = split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key -r x kill-pane
bind-key q kill-window
bind-key -r h previous-window
bind-key -r l next-window
bind-key -r p switch-client -p
bind-key -r n switch-client -n
unbind-key space
bind-key -r Space next-layout
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"
bind-key s choose-session -Z
bind-key w choose-window -Z
bind -T copy-mode-vi Escape send-keys -X cancel
bind-key y display-popup \
-d "#{pane_current_path}" \
-w 80% \
-h 80% \
-E "lazygit"
bind-key \ 
bind-key -n C-h if-shell -F "#{@pane-is-vim}" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell -F "#{@pane-is-vim}" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell -F "#{@pane-is-vim}" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell -F "#{@pane-is-vim}" "send-keys C-l" "select-pane -R"
bind-key -n M-h if-shell -F "#{@pane-is-vim}" "send-keys M-h" "resize-pane -L 6"
bind-key -n M-j if-shell -F "#{@pane-is-vim}" "send-keys M-j" "resize-pane -D 2"
bind-key -n M-k if-shell -F "#{@pane-is-vim}" "send-keys M-k" "resize-pane -U 2"
bind-key -n M-l if-shell -F "#{@pane-is-vim}" "send-keys M-l" "resize-pane -R 6"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind C-l send-keys 'C-l'

# -----------------------------------------------------------------------------
# Styling
# -----------------------------------------------------------------------------
set -g status-position top
set -g status-justify absolute-centre
set -g status-bg default
set -g status-fg '#BFBFBF'
set -g status-style 'bg=default'

set -g status-left-length 100
set -g status-left '#S '
set -g status-left-style 'fg=#BFBFBF'

set -g status-right ''
set -g status-right-length 0

set -g window-status-format '#W[#I]'
set -g window-status-current-format '#W[#I]'

# --- Conditional Current Window Style ---
if-shell '[ -n "$SSH_CLIENT" ]' {
    # SSH: Active window is Cyan
    setw -g window-status-current-style 'fg=#00FFFF,bg=default,bold'
} {
    # LOCAL: Active window is Mint Green
    setw -g window-status-current-style 'fg=#1AFFA3,bg=default,bold'
}

setw -g window-status-style 'fg=#767C77,bg=#232323'

set -g pane-border-style 'fg=#404040'
set -g pane-active-border-style 'fg=cyan'

set -g message-style 'fg=cyan,bg=default,bold'

set -g mode-style 'bold,fg=cyan'

